@model CadastroTempus.Models.dadosCliente

@{
    ViewBag.Title = "Create";
}
<body style="background-color:lightcyan">
    <h2>Cadastrar cliente</h2>

    <html xmlns="http://www.w3.org/1999/xhtml">
    <script src="https://code.jquery.com/jquery-1.10.0.min.js"></script>
    <script src="https://rawgit.com/RobinHerbots/Inputmask/3.x/dist/jquery.inputmask.bundle.js"></script>
    <script src="Scripts/bootstrap.js"></script>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Insira os dados abaixo</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="col-md-4 control-label">Nome completo:</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.TextBoxFor(model => model.Nome, htmlAttributes: new { @class = "form-control", required = "required", maxlength = "150", placeholder = "Nome" })

                    </div>
                </div>
            </div>


            <div class="form-group">
                <label class="col-md-4 control-label">CPF (somente números):</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-asterisk"></i></span>
                        @Html.TextBoxFor(model => model.TxtCpf, htmlAttributes: new { @class = "form-control", required = "required", maxlength = "11", placeholder = "CPF", onkeyup = "cpfCheck(this)", id = "TxtCpf", type = "text", })
                    </div>
                    <span id="cpfResponse"></span>
                </div>
            </div>


            <div class="form-group">
                <label class="col-md-4 control-label">Data de nascimento:</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                        @Html.TextBoxFor(model => model.DtaNascimento, htmlAttributes: new { @class = "form-control", type = "date", required = "required", id = "dataNasc" })


                    </div>
                </div>
            </div>


            <div class="form-group">
                <label class="col-md-4 control-label">Renda:</label>
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-usd"></i></span>
                        @Html.TextBoxFor(model => model.Renda, htmlAttributes: new { @class = "form-control", type = "number", min = "0", required = "required", step = "0.01", id = "money", placeholder = "R$" })
                    </div>
                </div>
            </div>

            <div class="form-group" style="align-content:center">
                <div class="col-md-offset-2 col-md-10">
                    <input id="form "type="submit" value="Cadastrar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Lista de clientes", "Index")
    </div>




    </html>

    </body>
<script type="text/javascript">
    $("#form").submit(function (event) {
        $('#TxtCpf').val($('#TxtCpf').val().replace('.', '').replace('/', '').replace('-', ''));
    });

    function is_cpf(c) {
        if ((c = c.replace(/[^\d]/g, "")).length != 11)
            return false
        if (c == "00000000000")
            return false;
        var r;
        var s = 0;
        for (i = 1; i <= 9; i++)
            s = s + parseInt(c[i - 1]) * (11 - i);
        r = (s * 10) % 11;
        if ((r == 10) || (r == 11))
            r = 0;
        if (r != parseInt(c[9]))
            return false;
        s = 0;
        for (i = 1; i <= 10; i++)
            s = s + parseInt(c[i - 1]) * (12 - i);
        r = (s * 10) % 11;
        if ((r == 10) || (r == 11))
            r = 0;
        if (r != parseInt(c[10]))
            return false;
        return true;
    }
    cpfCheck = function (el) {
        document.getElementById('cpfResponse').innerHTML = is_cpf(el.value) ? '<span style="color:green">válido</span>' : '<span style="color:red">inválido!</span>';
        if (el.value == '') document.getElementById('cpfResponse').innerHTML = '';
    }
    var today = new Date();
    var dd = today.getDate();
    var mm = today.getMonth() + 1;
    var yyyy = today.getFullYear();
    if (dd < 10) {
        dd = '0' + dd
    }
    if (mm < 10) {
        mm = '0' + mm
    }
    today = yyyy + '-' + mm + '-' + dd;
    document.getElementById("dataNasc").setAttribute("max", today);
</script>